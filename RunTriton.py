from argparse import ArgumentParser
from textwrap import dedent


def parse_args():
    description = "Running agents for multiple configurations on the cluster."
    parser = ArgumentParser(description=description)
    parser.add_argument("--start_sweep_file", required=True,
                        help="Path towards the start_sweep_file generated by run_all.sh")
    parser.add_argument("--scripts_save_dir", required=True,
                        help="Path towards the start_sweep_file generated by run_all.sh")

    return parser.parse_args()

def create_sbatch_script(project, api_key):
    sweep = project.split("/")[-1]

    template = f"""
        #!/bin/sh
        #SBATCH --job-name=pykt_{sweep}
        #SBATCH --time=12:00:00
        #SBATCH --cpus-per-task=1
        #SBATCH --gpus-per-node=1
        #SBATCH --mem=8GB
        #SBATCH --chdir=/home/koutchc1/pykt-toolkit
        #SBATCH --output=/home/koutchc1/pykt-toolkit/logs/search/slurm_seq2seq_%A_%a.out

        module load miniconda;
        source activate pykt;

        export PYTHONPATH="$HOME/pykt-toolkit"
        export HF_DATASETS_CACHE="/scratch/work/koutchc1/cache/huggingface/datasets/"
        export CUDA_VISIBLE_DEVICES=1 

        {api_key} wandb agent {project}
    """

    template = dedent(template)
    return template

def main():
    args = parse_args()
    # read the file 
    with open(args.start_sweep_file, 'r') as f:
        lines = f.readlines()
        for line in lines:
            print(line)
            cvd, api_key, nh, wdb, agent, project, esp = line.split(" ")
            script = create_sbatch_script(project, api_key) 
            sweep = project.split("/")[-1]
            

if __name__ == "__main__":
    main()